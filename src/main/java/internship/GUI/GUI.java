/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package internship.GUI;

import internship.Weka.Comparison;
import internship.Weka.Data;
import internship.Weka.GA.GA;
import internship.Weka.Result;
import internship.Weka.Tests.Test;
import internship.Weka.WekaMain;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.ListModel;

/**
 *
 * @author Florian
 */
public class GUI extends javax.swing.JFrame {

    public String testType = "";
    public String baseLinePath = "";
    public String followUpPath = "";
    public String bioMarkersPath = "";
    public String targetLocation = "";
    public ArrayList<String> unwanted = new ArrayList<String>();
    public int maxFU = 0;
    public String classifier = "";
    public int run = 0;
    private WekaMain weka;
    private int numTree;
    private int numForestAtt;
    private double ridgeFactor;
    private int numNeighbours;
    private RocPanel rocPanel = new RocPanel();
    private String hospitalLocation;

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        initiatePane();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jTabbedPane18 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        base1TextArea = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        base3TextArea = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        base6TextArea = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        base12TextArea = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        base18TextArea = new javax.swing.JTextArea();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        one3TextArea = new javax.swing.JTextArea();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        one6TextArea = new javax.swing.JTextArea();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        one12TextArea = new javax.swing.JTextArea();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        one18TextArea = new javax.swing.JTextArea();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        three6TextArea = new javax.swing.JTextArea();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        three12TextArea = new javax.swing.JTextArea();
        jPanel13 = new javax.swing.JPanel();
        jScrollPane13 = new javax.swing.JScrollPane();
        three18TextArea = new javax.swing.JTextArea();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane14 = new javax.swing.JScrollPane();
        six12TextArea = new javax.swing.JTextArea();
        jPanel15 = new javax.swing.JPanel();
        jScrollPane15 = new javax.swing.JScrollPane();
        six18TextArea = new javax.swing.JTextArea();
        jPanel16 = new javax.swing.JPanel();
        jScrollPane16 = new javax.swing.JScrollPane();
        twelve18TextArea = new javax.swing.JTextArea();
        jPanel24 = new javax.swing.JPanel();
        startBox = new javax.swing.JComboBox();
        endBox = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        compareButton = new javax.swing.JButton();
        jScrollPane18 = new javax.swing.JScrollPane();
        compareArea = new javax.swing.JTextArea();
        localCombo = new javax.swing.JComboBox();
        jPanel25 = new javax.swing.JPanel();
        compareInButton1 = new javax.swing.JComboBox();
        compareInButton2 = new javax.swing.JComboBox();
        compareInStart = new javax.swing.JButton();
        jScrollPane19 = new javax.swing.JScrollPane();
        compareInArea = new javax.swing.JTextArea();
        jScrollPane17 = new javax.swing.JScrollPane();
        unwantedList = new javax.swing.JList();
        jLabel10 = new javax.swing.JLabel();
        removeUnwanted = new javax.swing.JButton();
        unwantedAtt = new javax.swing.JTextField();
        addUnwanted = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel19 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        numAtt = new javax.swing.JTextField();
        minInstances = new javax.swing.JTextField();
        WrappedButton = new javax.swing.JButton();
        jPanel17 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        classifierType = new javax.swing.JComboBox();
        maxFuBox = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        voteTypeBox = new javax.swing.JComboBox();
        jLabel20 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        filterAttributeButton = new javax.swing.JComboBox();
        numAttFilter = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        hospitalization = new javax.swing.JToggleButton();
        baseFilter = new javax.swing.JComboBox();
        jPanel18 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        pruned = new javax.swing.JComboBox();
        jPanel20 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        numTrees = new javax.swing.JTextField();
        numForestAttField = new javax.swing.JTextField();
        jPanel21 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        ridgeFactorField = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jPanel23 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        nnField = new javax.swing.JTextField();
        TestSettings = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        hospitalizationField = new javax.swing.JTextField();

        jFormattedTextField1.setText("jFormattedTextField1");

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextField1.setText("D:\\Temp\\TIME-CHF_baseline.csv");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField2.setText("D:\\Temp\\TIME_CHF_follow_up.csv");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel1.setText("BaseLine data:");

        jLabel2.setText("Follow up data:");

        jLabel3.setText("BioMarkers data:");

        jTextField3.setText("D:\\Temp\\TIME-CHF_Biomarkers.csv");
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jButton1.setText("Build Classifiers");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Target Location:");

        jTextField4.setText("D:\\Temp\\Results");
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jTabbedPane18.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 584, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 713, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 39, Short.MAX_VALUE))
        );

        jTabbedPane18.addTab("Results", jPanel1);

        base1TextArea.setEditable(false);
        base1TextArea.setColumns(20);
        base1TextArea.setRows(5);
        jScrollPane2.setViewportView(base1TextArea);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 584, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 752, Short.MAX_VALUE)
        );

        jTabbedPane18.addTab("Base -> FU 1", jPanel10);

        base3TextArea.setEditable(false);
        base3TextArea.setColumns(20);
        base3TextArea.setRows(5);
        jScrollPane3.setViewportView(base3TextArea);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 584, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 752, Short.MAX_VALUE)
        );

        jTabbedPane18.addTab("Base -> FU 3", jPanel2);

        base6TextArea.setEditable(false);
        base6TextArea.setColumns(20);
        base6TextArea.setRows(5);
        jScrollPane4.setViewportView(base6TextArea);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 584, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 752, Short.MAX_VALUE)
        );

        jTabbedPane18.addTab("Base -> FU 6", jPanel3);

        base12TextArea.setEditable(false);
        base12TextArea.setColumns(20);
        base12TextArea.setRows(5);
        jScrollPane5.setViewportView(base12TextArea);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 584, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 752, Short.MAX_VALUE)
        );

        jTabbedPane18.addTab("Base -> FU 12", jPanel4);

        base18TextArea.setEditable(false);
        base18TextArea.setColumns(20);
        base18TextArea.setRows(5);
        jScrollPane6.setViewportView(base18TextArea);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 584, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 752, Short.MAX_VALUE)
        );

        jTabbedPane18.addTab("Base -> FU 18", jPanel5);

        one3TextArea.setEditable(false);
        one3TextArea.setColumns(20);
        one3TextArea.setRows(5);
        jScrollPane7.setViewportView(one3TextArea);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 584, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 752, Short.MAX_VALUE)
        );

        jTabbedPane18.addTab("FU 1 -> FU 3", jPanel6);

        one6TextArea.setEditable(false);
        one6TextArea.setColumns(20);
        one6TextArea.setRows(5);
        jScrollPane8.setViewportView(one6TextArea);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 584, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 752, Short.MAX_VALUE)
        );

        jTabbedPane18.addTab("FU 1 -> FU 6", jPanel7);

        one12TextArea.setEditable(false);
        one12TextArea.setColumns(20);
        one12TextArea.setRows(5);
        jScrollPane9.setViewportView(one12TextArea);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 584, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 752, Short.MAX_VALUE)
        );

        jTabbedPane18.addTab("FU 1 -> FU 12", jPanel8);

        one18TextArea.setEditable(false);
        one18TextArea.setColumns(20);
        one18TextArea.setRows(5);
        jScrollPane10.setViewportView(one18TextArea);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 584, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 752, Short.MAX_VALUE)
        );

        jTabbedPane18.addTab("FU 1 -> FU 18", jPanel9);

        three6TextArea.setEditable(false);
        three6TextArea.setColumns(20);
        three6TextArea.setRows(5);
        jScrollPane11.setViewportView(three6TextArea);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 584, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 752, Short.MAX_VALUE)
        );

        jTabbedPane18.addTab("FU 3 -> FU 6", jPanel11);

        three12TextArea.setEditable(false);
        three12TextArea.setColumns(20);
        three12TextArea.setRows(5);
        jScrollPane12.setViewportView(three12TextArea);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 584, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 752, Short.MAX_VALUE)
        );

        jTabbedPane18.addTab("FU 3 -> FU 12", jPanel12);

        three18TextArea.setEditable(false);
        three18TextArea.setColumns(20);
        three18TextArea.setRows(5);
        jScrollPane13.setViewportView(three18TextArea);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 584, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 752, Short.MAX_VALUE)
        );

        jTabbedPane18.addTab("FU 3 -> FU 18", jPanel13);

        six12TextArea.setEditable(false);
        six12TextArea.setColumns(20);
        six12TextArea.setRows(5);
        jScrollPane14.setViewportView(six12TextArea);

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane14, javax.swing.GroupLayout.DEFAULT_SIZE, 584, Short.MAX_VALUE)
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane14, javax.swing.GroupLayout.DEFAULT_SIZE, 752, Short.MAX_VALUE)
        );

        jTabbedPane18.addTab("FU 6 -> FU 12", jPanel14);

        six18TextArea.setEditable(false);
        six18TextArea.setColumns(20);
        six18TextArea.setRows(5);
        jScrollPane15.setViewportView(six18TextArea);

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane15, javax.swing.GroupLayout.DEFAULT_SIZE, 584, Short.MAX_VALUE)
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane15, javax.swing.GroupLayout.DEFAULT_SIZE, 752, Short.MAX_VALUE)
        );

        jTabbedPane18.addTab("FU 6 -> FU 18", jPanel15);

        twelve18TextArea.setEditable(false);
        twelve18TextArea.setColumns(20);
        twelve18TextArea.setRows(5);
        jScrollPane16.setViewportView(twelve18TextArea);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane16, javax.swing.GroupLayout.DEFAULT_SIZE, 584, Short.MAX_VALUE)
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane16, javax.swing.GroupLayout.DEFAULT_SIZE, 752, Short.MAX_VALUE)
        );

        jTabbedPane18.addTab("FU 12 -> FU 18", jPanel16);

        startBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "3", "6", "12", "18" }));

        endBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "3", "6", "12", "18" }));

        jLabel16.setText("Start:");

        jLabel25.setText("End:");

        compareButton.setText("Compare");
        compareButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compareButtonActionPerformed(evt);
            }
        });

        compareArea.setColumns(20);
        compareArea.setRows(5);
        jScrollPane18.setViewportView(compareArea);

        localCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Local prediction", "Overal prediction" }));

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane18)
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(startBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel25)
                            .addComponent(endBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(compareButton, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(localCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 228, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(compareButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(jLabel25))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(startBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(endBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(localCombo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane18, javax.swing.GroupLayout.DEFAULT_SIZE, 684, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane18.addTab("Compare ensembles", jPanel24);

        compareInButton1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Base -> Fu1", "Base -> Fu3", "Base -> Fu6", "Base -> Fu12", "Base -> Fu18", "Fu1 -> Fu3", "Fu1 -> Fu6", "Fu1 -> Fu12", "Fu1 -> Fu 18", "Fu3 -> Fu6", "Fu3 -> Fu12", "Fu3 -> Fu 18", "Fu6 -> Fu12", "Fu6 -> Fu 18", "Fu12 -> Fu 18" }));

        compareInButton2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Base -> Fu1", "Base -> Fu3", "Base -> Fu6", "Base -> Fu12", "Base -> Fu18", "Fu1 -> Fu3", "Fu1 -> Fu6", "Fu1 -> Fu12", "Fu1 -> Fu 18", "Fu3 -> Fu6", "Fu3 -> Fu12", "Fu3 -> Fu 18", "Fu6 -> Fu12", "Fu6 -> Fu 18", "Fu12 -> Fu 18" }));

        compareInStart.setText("Compare");
        compareInStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compareInStartActionPerformed(evt);
            }
        });

        compareInArea.setColumns(20);
        compareInArea.setRows(5);
        jScrollPane19.setViewportView(compareInArea);

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane19)
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addComponent(compareInButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(compareInButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(compareInStart)
                        .addGap(0, 265, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(compareInButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(compareInButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(compareInStart))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane19, javax.swing.GroupLayout.DEFAULT_SIZE, 696, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane18.addTab("Compare individuals", jPanel25);

        unwantedList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Centre", "PatientNumber", "DOB", "Confession", "Atheist", "CADYear", "DateMIyear", "DateMImonth", "DatePTCAyear", "DatePTCAmonth", "DateCABGyear", "DateCABGmonth", "DCMYear", "HypertensionYear", "ValvularYear", "OtherHDComment", "OtherYear", "DmYear", "CancerYear", "CancerComment", "DateDis", "Meals", "Housework", "Cost_imputation_selection", "FU_costs", "Cost_imputation_selectionB", "Cost_patient_selection", "Rehab_resource", "Hosp_resource", "ICU_resource", "EH_resource", "NH_resource", "Proc_resource", "Visits_resource", "SomVanVisite_ext_home", "Proc_CV_resource", "Proc_total_resource", "TimeRandtoBL", "XXX_MedHistory_RiscFactors_XXX" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane17.setViewportView(unwantedList);

        jLabel10.setText("List of ignored attributes:");

        removeUnwanted.setText("Remove attribute:");
        removeUnwanted.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeUnwantedActionPerformed(evt);
            }
        });

        unwantedAtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unwantedAttActionPerformed(evt);
            }
        });

        addUnwanted.setText("Add Attribute:");
        addUnwanted.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUnwantedActionPerformed(evt);
            }
        });

        jTextField5.setText("C:\\Florian\\Universiteit\\Internship\\TIME-CHF\\CVS files\\TIME-CHF_baseline.csv");

        jTextField6.setText("C:\\Florian\\Universiteit\\Internship\\TIME-CHF\\CVS files\\TIME_CHF_follow_up.csv");

        jTextField7.setText("C:\\Florian\\Universiteit\\Internship\\TIME-CHF\\CVS files\\TIME-CHF_Biomarkers.csv");

        jLabel12.setText("Baseline test data:");

        jLabel13.setText("Follow up test data:");

        jLabel14.setText("Biomakers test data:");

        jTextField8.setText("C:\\Temp");
        jTextField8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField8ActionPerformed(evt);
            }
        });

        jLabel15.setText("Target location test:");

        jLabel17.setText("Add attribute:");

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel8.setText("#Random attributes:");

        jLabel9.setText("Min # of Instances/leave:");

        numAtt.setText("30");
        numAtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numAttActionPerformed(evt);
            }
        });

        minInstances.setText("5");

        WrappedButton.setText("Feature selection test");
        WrappedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WrappedButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 148, Short.MAX_VALUE)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(numAtt)
                    .addComponent(minInstances, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addGap(33, 33, 33))
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(WrappedButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(numAtt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(minInstances, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(WrappedButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(80, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Random Tree options", jPanel19);

        jLabel7.setText("Type of Classifier:");

        classifierType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "J48", "Random Tree", "Random Forest", "NN", "Logisitic regression", "Naive Bayes", "SVM", "AdaBooster" }));
        classifierType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classifierTypeActionPerformed(evt);
            }
        });

        maxFuBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5" }));
        maxFuBox.setSelectedIndex(4);
        maxFuBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maxFuBoxActionPerformed(evt);
            }
        });

        jLabel5.setText("Maximum amount of follow ups:");

        voteTypeBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Majority vote", "Veto vote", "Max Probability", "Min Probability", "Average Probability" }));
        voteTypeBox.setSelectedIndex(4);

        jLabel20.setText("Vote type:");

        jLabel18.setText("Veto:");

        jTextField9.setText("5");
        jTextField9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField9ActionPerformed(evt);
            }
        });

        filterAttributeButton.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Don't Filter Attributes", "Filter Attributes", "Union of filtered Attributes", "Use random filtered Attributes", "Intersection of filtered Attributes" }));

        numAttFilter.setText("20");
        numAttFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numAttFilterActionPerformed(evt);
            }
        });

        jLabel27.setText("Number of attributes:");

        hospitalization.setText("hospitalization");
        hospitalization.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospitalizationActionPerformed(evt);
            }
        });

        baseFilter.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Individual Univariate", "Individual Wrapper", "Individual Multivariate", "Ensemble Wrapper", "Average Wrapper" }));
        baseFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                baseFilterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addComponent(classifierType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(voteTypeBox, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jLabel20))
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(32, 32, 32)
                        .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel17Layout.createSequentialGroup()
                                .addComponent(jLabel27)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(numAttFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(filterAttributeButton, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(maxFuBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addComponent(hospitalization)
                        .addGap(38, 38, 38)
                        .addComponent(baseFilter, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(classifierType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(voteTypeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maxFuBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filterAttributeButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hospitalization)
                    .addComponent(baseFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numAttFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Vote Options", jPanel17);

        jLabel6.setText("Prune J48 trees:");

        pruned.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "No", "Yes" }));

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(pruned, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(256, Short.MAX_VALUE))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pruned, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(159, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("J48 Options", jPanel18);

        jLabel22.setText("Number of Trees:");

        jLabel23.setText("Number of attributes:");

        numTrees.setText("10");
        numTrees.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numTreesActionPerformed(evt);
            }
        });

        numForestAttField.setText("30");

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 136, Short.MAX_VALUE)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(numTrees, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                    .addComponent(numForestAttField))
                .addContainerGap())
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(numTrees, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(numForestAttField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(142, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Random Forest Options", jPanel20);

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 362, Short.MAX_VALUE)
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 217, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("SVM options", jPanel21);

        jLabel24.setText("Ridge factor");

        ridgeFactorField.setText("0.1");
        ridgeFactorField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ridgeFactorFieldActionPerformed(evt);
            }
        });

        jLabel26.setText("Use a double, using a dot. No powers of 10");

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addGap(43, 43, 43)
                        .addComponent(ridgeFactorField, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel26))
                .addContainerGap(103, Short.MAX_VALUE))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(ridgeFactorField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel26)
                .addContainerGap(159, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Logistic Regression Options", jPanel22);

        jLabel21.setText("Number of Neighbours:");

        nnField.setText("5");

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nnField, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(145, Short.MAX_VALUE))
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(nnField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 195, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("NN Options", jPanel23);

        jTabbedPane1.setSelectedIndex(1);

        TestSettings.setText("Test Settings");
        TestSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TestSettingsActionPerformed(evt);
            }
        });

        jLabel28.setText("Hospitalization data:");

        hospitalizationField.setText("D:\\Temp\\HF_hospitalization.csv");
        hospitalizationField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospitalizationFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(1008, 1008, 1008))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(hospitalizationField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(jTextField4, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(89, 89, 89))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel28)
                                    .addComponent(TestSettings, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel10)
                                            .addComponent(jScrollPane17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(unwantedAtt, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel17)
                                            .addComponent(removeUnwanted)
                                            .addComponent(addUnwanted))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTabbedPane18, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel1)
                        .addGap(3, 3, 3)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addGap(2, 2, 2)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addGap(11, 11, 11)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel28)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hospitalizationField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(305, 305, 305))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel17))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(unwantedAtt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(addUnwanted)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(removeUnwanted))
                                    .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(TestSettings)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTabbedPane18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jLabel14))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(35, Short.MAX_VALUE))))
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("Vote Options");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initiatePane() {
        jTabbedPane18.add("ROC Graph", rocPanel);
        Result res = new Result();
        res.work();
        res.calcAUC();
        drawRocCurve(res);
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        baseLinePath = jTextField1.getText();
        followUpPath = jTextField2.getText();
        bioMarkersPath = jTextField3.getText();
        targetLocation = jTextField4.getText();
        maxFU = maxFuBox.getSelectedIndex() + 1;
        run++;

       
        boolean prune = false;
        if (pruned.getSelectedIndex() == 0) {
            prune = false;
        } else {
            prune = true;
        }

        if (classifierType.getSelectedIndex() == 0) {
            classifier = "J48";
        } else if (classifierType.getSelectedIndex() == 1) {
            classifier = "randomTree";
        } else if (classifierType.getSelectedIndex() == 2) {
            classifier = "randomForest";
        } else if (classifierType.getSelectedIndex() == 3) {
            classifier = "NN";
        } else if (classifierType.getSelectedIndex() == 4) {
            classifier = "logReg";
        } else if (classifierType.getSelectedIndex() == 5) {
            classifier = "naiveBayes";
        } else if (classifierType.getSelectedIndex() == 6) {
            classifier = "SVM";
        } else if (classifierType.getSelectedIndex() == 7) {
            classifier = "AdaBooster";
        }
        baseLinePath = baseLinePath.replace("/", "//");
        followUpPath = followUpPath.replace("/", "//");
        bioMarkersPath = bioMarkersPath.replace("/", "//");
        targetLocation = targetLocation.replace("/", "//");
        hospitalLocation = hospitalizationField.getText();
        hospitalLocation = hospitalLocation.replace("/", "//");
        String numAttributes = numAtt.getText();
        String minLeavesRandom = minInstances.getText();
        unwanted = new ArrayList<String>();
        ListModel list = unwantedList.getModel();
        for (int i = 0; i < list.getSize(); i++) {
            unwanted.add((String) list.getElementAt(i));
        }
        try {
            weka = new WekaMain(baseLinePath, followUpPath, bioMarkersPath, targetLocation, unwanted, prune, classifier, numAttributes,
                    minLeavesRandom, hospitalLocation);
            weka.hospitalization = hospitalization.isSelected();
            if(baseFilter.getSelectedIndex() == 0){
                weka.baseFilter =  weka.baseFilter.univariate;
            } else if(baseFilter.getSelectedIndex() == 1){
                weka.baseFilter =  weka.baseFilter.multivariate;
            } else if(baseFilter.getSelectedIndex() == 2){
                weka.baseFilter =  weka.baseFilter.indiWrapper;
            } else if(baseFilter.getSelectedIndex() == 3){
                weka.baseFilter =  weka.baseFilter.ensembleWrap;
            } else if(baseFilter.getSelectedIndex() == 4){
                weka.baseFilter =  weka.baseFilter.averageWrap;
            }
            if (filterAttributeButton.getSelectedIndex() == 0) {
                weka.filterRecombination = weka.filterRecombination.none;
            } else if (filterAttributeButton.getSelectedIndex() == 1) {
                weka.filterRecombination = weka.filterRecombination.filter;
            } else if (filterAttributeButton.getSelectedIndex() == 2) {
                weka.filterRecombination = weka.filterRecombination.union;
            } else if (filterAttributeButton.getSelectedIndex() == 3) {
                weka.filterRecombination = weka.filterRecombination.random;
            } else if (filterAttributeButton.getSelectedIndex() == 4) {
                weka.filterRecombination = weka.filterRecombination.intersection;
            }
            
            
            weka.selected = Integer.parseInt(numAttFilter.getText());
            weka.run();
            numTree = Integer.parseInt(numTrees.getText());
            numForestAtt = Integer.parseInt(numForestAttField.getText());
            ridgeFactor = Double.parseDouble(ridgeFactorField.getText());
            numNeighbours = Integer.parseInt(nnField.getText());
            weka.setClassifierAtt(prune, Integer.parseInt(numAttributes), Integer.parseInt(minLeavesRandom), numTree, numForestAtt, numNeighbours, ridgeFactor);

            weka.buildClassifier();
            if (voteTypeBox.getSelectedIndex() == 0) {
                weka.voteType = weka.voteType.majority;
            } else if (voteTypeBox.getSelectedIndex() == 1) {
                weka.voteType = weka.voteType.veto;
            } else if (voteTypeBox.getSelectedIndex() == 2) {
                weka.voteType = weka.voteType.maxProb;
            } else if (voteTypeBox.getSelectedIndex() == 3) {
                weka.voteType = weka.voteType.minProb;
            } else if (voteTypeBox.getSelectedIndex() == 4) {
                weka.voteType = weka.voteType.averageProb;
            }
            Integer veto = Integer.parseInt(jTextField9.getText());
            //Result cross = weka.kFoldCrossValidation(weka.sets, maxFU, veto, new ArrayList<Data>());
            //setText(cross, false);
            visualizeTrees(weka.sets);
            //drawRocCurve(cross);
        } catch (Exception e) {
            System.out.println(e);
            System.out.println(e.getStackTrace());
            e.printStackTrace();
            JFrame frame = new JFrame();
            JOptionPane.showMessageDialog(frame, "Something went wrong, please check if the paths given are valid");
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void drawRocCurve(Result r) {
        rocPanel.coords = r.coors;
        rocPanel.repaint();
    }

    private void visualizeTrees(ArrayList<Data> sets) throws Exception {
        ArrayList<JTextArea> areas = new ArrayList<JTextArea>();
        areas.add(base1TextArea);
        areas.add(base3TextArea);
        areas.add(base6TextArea);
        areas.add(base12TextArea);
        areas.add(base18TextArea);
        areas.add(one3TextArea);
        areas.add(one6TextArea);
        areas.add(one12TextArea);
        areas.add(one18TextArea);
        areas.add(three6TextArea);
        areas.add(three12TextArea);
        areas.add(three18TextArea);
        areas.add(six12TextArea);
        areas.add(six18TextArea);
        areas.add(twelve18TextArea);

        for (int i = 0; i < sets.size(); i++) {
            areas.get(i).append("-------------------------------------------------------");
            areas.get(i).append("\n");
            areas.get(i).append("\n");
            areas.get(i).append("Testing run: " + run + "\n");
            areas.get(i).append("Testing type: " + testType + "\n");
            areas.get(i).append("Classifier type: " + classifier + "\n");
            areas.get(i).append("\n");
            areas.get(i).append("\n");
            areas.get(i).append(sets.get(i).classifier.toString());
            areas.get(i).append("\n");
            areas.get(i).append("\n");
            areas.get(i).append("Confusion Matrix of 10-fold crossvalidation: \n");
            sets.get(i).crossValidate();
            double[][] cM1 = sets.get(i).crossvalidateCMatrix();
            double[][] cM = new double[2][2];
            cM[0][0] = cM1[0][0];
            cM[0][1] = cM1[1][0];
            cM[1][0] = cM1[0][1];
            cM[1][1] = cM1[1][1];
            Result result = new Result(cM, 0, 0, 0);
            areas.get(i).append("True:      False: \n");
            areas.get(i).append(cM[0][0] + "        " + cM[1][0] + "        <--- Classified as True \n");
            areas.get(i).append(cM[0][1] + "        " + cM[1][1] + "        <--- Classified as False \n");
            areas.get(i).append("\n");
            areas.get(i).append("\n");
            areas.get(i).append("ROC: " + sets.get(i).getAUC() + "\n");
            areas.get(i).append("\n");
            areas.get(i).append("\n");
            areas.get(i).append("-------------------------------------------------------");
        }
    }

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void removeUnwantedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeUnwantedActionPerformed
        ListModel list = unwantedList.getModel();
        DefaultListModel list2 = new DefaultListModel();
        int[] selected = unwantedList.getSelectedIndices();

        for (int i = 0; i < list.getSize(); i++) {
            boolean select = false;
            for (int j = 0; j < selected.length; j++) {
                if (i == selected[j]) {
                    select = true;
                    break;
                }
            }
            if (!select) {
                list2.addElement(list.getElementAt(i));
            }
        }
        unwantedList.setModel(list2);
    }//GEN-LAST:event_removeUnwantedActionPerformed

    private void addUnwantedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUnwantedActionPerformed

        ListModel list = unwantedList.getModel();
        DefaultListModel list2 = new DefaultListModel();
        for (int i = 0; i < list.getSize(); i++) {
            list2.addElement(list.getElementAt(i));
        }
        list2.addElement(unwantedAtt.getText());
        unwantedList.setModel(list2);
    }//GEN-LAST:event_addUnwantedActionPerformed

    private void unwantedAttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unwantedAttActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unwantedAttActionPerformed

    private void jTextField8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField8ActionPerformed

    private void jTextField9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField9ActionPerformed

    private void maxFuBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maxFuBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maxFuBoxActionPerformed

    private void classifierTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classifierTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_classifierTypeActionPerformed

    private void numAttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numAttActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numAttActionPerformed

    private void numTreesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numTreesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numTreesActionPerformed

    private void ridgeFactorFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ridgeFactorFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ridgeFactorFieldActionPerformed

    private void compareButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compareButtonActionPerformed
        maxFU = maxFuBox.getSelectedIndex() + 1;
        Integer veto = Integer.parseInt(jTextField9.getText());
        int end = endBox.getSelectedIndex();

        compareArea.setText(null);
        ArrayList<Integer> start = new ArrayList<Integer>();
        for (int i = startBox.getSelectedIndex(); i < endBox.getSelectedIndex(); i++) {
            start.add(i);
        }
        boolean local = false;
        if (localCombo.getSelectedIndex() == 0) {
            local = true;
        }
        Result res = new Result();
        for (int i = 0; i < start.size(); i++) {

            for (int k = 0; k < weka.sets.size(); k++) {
                if (weka.sets.get(k).start == start.get(i) && weka.sets.get(k).end == end) {
                    double[][] cM = new double[2][2];
                    double[][] cM2 = new double[2][2];
                    double roc = 0.0;
                    try {
                        weka.sets.get(k).crossValidate();
                        cM = weka.sets.get(k).crossvalidateCMatrix();
                        roc = weka.sets.get(k).getAUC();
                    } catch (Exception ex) {
                        Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    int starts = 0;
                    int ends = 0;
                    if (start.get(i) == 0) {
                        starts = 0;
                    } else if (start.get(i) == 1) {
                        starts = 1;
                    } else if (start.get(i) == 2) {
                        starts = 3;
                    } else if (start.get(i) == 3) {
                        starts = 6;
                    } else if (start.get(i) == 4) {
                        starts = 12;
                    } else if (start.get(i) == 5) {
                        starts = 18;
                    }
                    if (end == 0) {
                        ends = 0;
                    } else if (end == 1) {
                        ends = 1;
                    } else if (end == 2) {
                        ends = 3;
                    } else if (end == 3) {
                        ends = 6;
                    } else if (end == 4) {
                        ends = 12;
                    } else if (end == 5) {
                        ends = 18;
                    }
                    setCompareText(res, starts, ends, cM, roc, true);

                }
            }
        }
        try {
            res = weka.testEnsemble(start.get(0), end, veto, maxFU, local);
        } catch (Exception ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        int starts = 0;
        int ends = 0;
        if (start.get(0) == 0) {
            starts = 0;
        } else if (start.get(0) == 1) {
            starts = 1;
        } else if (start.get(0) == 2) {
            starts = 3;
        } else if (start.get(0) == 3) {
            starts = 6;
        } else if (start.get(0) == 4) {
            starts = 12;
        } else if (start.get(0) == 5) {
            starts = 18;
        }
        if (end == 0) {
            ends = 0;
        } else if (end == 1) {
            ends = 1;
        } else if (end == 2) {
            ends = 3;
        } else if (end == 3) {
            ends = 6;
        } else if (end == 4) {
            ends = 12;
        } else if (end == 5) {
            ends = 18;
        }
        setCompareText(res, starts, ends, res.cMatrix, 0.0, false);
        drawRocCurve(res);
        try {
            visualizeTrees(weka.sets);
        } catch (Exception ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_compareButtonActionPerformed

    private void compareInStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compareInStartActionPerformed
        int start1 = 0;
        int end1 = 0;
        int start2 = 0;
        int end2 = 0;
        if (compareInButton1.getSelectedIndex() <= 4) {
            start1 = 0;
            if (compareInButton1.getSelectedIndex() == 0) {
                end1 = 1;
            } else if (compareInButton1.getSelectedIndex() == 1) {
                end1 = 2;
            } else if (compareInButton1.getSelectedIndex() == 2) {
                end1 = 3;
            } else if (compareInButton1.getSelectedIndex() == 3) {
                end1 = 4;
            } else {
                end1 = 5;
            }
        } else if (compareInButton1.getSelectedIndex() <= 8) {
            start1 = 1;
            if (compareInButton1.getSelectedIndex() == 5) {
                end1 = 2;
            } else if (compareInButton1.getSelectedIndex() == 6) {
                end1 = 3;
            } else if (compareInButton1.getSelectedIndex() == 7) {
                end1 = 4;
            } else {
                end1 = 5;
            }
        } else if (compareInButton1.getSelectedIndex() <= 11) {
            start1 = 2;
            if (compareInButton1.getSelectedIndex() == 9) {
                end1 = 3;
            } else if (compareInButton1.getSelectedIndex() == 10) {
                end1 = 4;
            } else {
                end1 = 5;
            }
        } else if (compareInButton1.getSelectedIndex() <= 13) {
            start1 = 3;
            if (compareInButton1.getSelectedIndex() == 12) {
                end1 = 4;
            } else {
                end1 = 5;
            }
        } else {
            start1 = 4;
            end1 = 5;
        }
        if (compareInButton2.getSelectedIndex() <= 4) {
            start2 = 0;
            if (compareInButton2.getSelectedIndex() == 0) {
                end2 = 1;
            } else if (compareInButton2.getSelectedIndex() == 1) {
                end2 = 2;
            } else if (compareInButton2.getSelectedIndex() == 2) {
                end2 = 3;
            } else if (compareInButton2.getSelectedIndex() == 3) {
                end2 = 4;
            } else {
                end2 = 5;
            }
        } else if (compareInButton2.getSelectedIndex() <= 8) {
            start2 = 1;
            if (compareInButton2.getSelectedIndex() == 5) {
                end2 = 2;
            } else if (compareInButton2.getSelectedIndex() == 6) {
                end2 = 3;
            } else if (compareInButton2.getSelectedIndex() == 7) {
                end2 = 4;
            } else {
                end2 = 5;
            }
        } else if (compareInButton2.getSelectedIndex() <= 11) {
            start2 = 2;
            if (compareInButton2.getSelectedIndex() == 9) {
                end2 = 3;
            } else if (compareInButton2.getSelectedIndex() == 10) {
                end2 = 4;
            } else {
                end2 = 5;
            }
        } else if (compareInButton2.getSelectedIndex() <= 13) {
            start2 = 3;
            if (compareInButton2.getSelectedIndex() == 12) {
                end2 = 4;
            } else {
                end2 = 5;
            }
        } else {
            start2 = 4;
            end2 = 5;
        }
        Comparison com = new Comparison(0, 0, 0, false, 0);
        try {
            com = weka.compareIndiv(start1, end1, start2, end2);
        } catch (Exception ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        setCompareInText(com);
    }//GEN-LAST:event_compareInStartActionPerformed

    private void numAttFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numAttFilterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numAttFilterActionPerformed

    private void hospitalizationFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospitalizationFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hospitalizationFieldActionPerformed

    private void WrappedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WrappedButtonActionPerformed
         
        wrapperTest();
    }//GEN-LAST:event_WrappedButtonActionPerformed
    public void wrapperTest(){
        baseLinePath = jTextField1.getText();
        followUpPath = jTextField2.getText();
        bioMarkersPath = jTextField3.getText();
        targetLocation = jTextField4.getText();
        maxFU = maxFuBox.getSelectedIndex() + 1;
        run++;
       
      
        boolean prune = false;
        if (pruned.getSelectedIndex() == 0) {
            prune = false;
        } else {
            prune = true;
        }

        if (classifierType.getSelectedIndex() == 0) {
            classifier = "J48";
        } else if (classifierType.getSelectedIndex() == 1) {
            classifier = "randomTree";
        } else if (classifierType.getSelectedIndex() == 2) {
            classifier = "randomForest";
        } else if (classifierType.getSelectedIndex() == 3) {
            classifier = "NN";
        } else if (classifierType.getSelectedIndex() == 4) {
            classifier = "logReg";
        } else if (classifierType.getSelectedIndex() == 5) {
            classifier = "naiveBayes";
        } else if (classifierType.getSelectedIndex() == 6) {
            classifier = "SVM";
        } else if (classifierType.getSelectedIndex() == 7) {
            classifier = "AdaBooster";
        }
        baseLinePath = baseLinePath.replace("/", "//");
        followUpPath = followUpPath.replace("/", "//");
        bioMarkersPath = bioMarkersPath.replace("/", "//");
        targetLocation = targetLocation.replace("/", "//");
        hospitalLocation = hospitalizationField.getText();
        hospitalLocation = hospitalLocation.replace("/", "//");
        String numAttributes = numAtt.getText();
        String minLeavesRandom = minInstances.getText();
        unwanted = new ArrayList<String>();
        ListModel list = unwantedList.getModel();
        for (int i = 0; i < list.getSize(); i++) {
            unwanted.add((String) list.getElementAt(i));
        }
        try {
            weka = new WekaMain(baseLinePath, followUpPath, bioMarkersPath, targetLocation,  unwanted, prune, classifier, numAttributes,
                    minLeavesRandom, hospitalLocation);
            weka.hospitalization = hospitalization.isSelected();
            if(baseFilter.getSelectedIndex() == 0){
                weka.baseFilter =  weka.baseFilter.univariate;
            } else if(baseFilter.getSelectedIndex() == 1){
                weka.baseFilter =  weka.baseFilter.multivariate;
            } else if(baseFilter.getSelectedIndex() == 2){
                weka.baseFilter =  weka.baseFilter.indiWrapper;
            } else if(baseFilter.getSelectedIndex() == 3){
                weka.baseFilter =  weka.baseFilter.ensembleWrap;
            } else if(baseFilter.getSelectedIndex() == 4){
                weka.baseFilter =  weka.baseFilter.averageWrap;
            }
            if (filterAttributeButton.getSelectedIndex() == 0) {
                weka.filterRecombination = weka.filterRecombination.none;
            } else if (filterAttributeButton.getSelectedIndex() == 1) {
                weka.filterRecombination = weka.filterRecombination.filter;
            } else if (filterAttributeButton.getSelectedIndex() == 2) {
                weka.filterRecombination = weka.filterRecombination.union;
            } else if (filterAttributeButton.getSelectedIndex() == 3) {
                weka.filterRecombination = weka.filterRecombination.random;
            } else if (filterAttributeButton.getSelectedIndex() == 4) {
                weka.filterRecombination = weka.filterRecombination.intersection;
            }
            weka.selected = Integer.parseInt(numAttFilter.getText());
            weka.run();
            numTree = Integer.parseInt(numTrees.getText());
            numForestAtt = Integer.parseInt(numForestAttField.getText());
            ridgeFactor = Double.parseDouble(ridgeFactorField.getText());
            numNeighbours = Integer.parseInt(nnField.getText());
            weka.setClassifierAtt(prune, Integer.parseInt(numAttributes), Integer.parseInt(minLeavesRandom), numTree, numForestAtt, numNeighbours, ridgeFactor);

           
            if (voteTypeBox.getSelectedIndex() == 0) {
                weka.voteType = weka.voteType.majority;
            } else if (voteTypeBox.getSelectedIndex() == 1) {
                weka.voteType = weka.voteType.veto;
            } else if (voteTypeBox.getSelectedIndex() == 2) {
                weka.voteType = weka.voteType.maxProb;
            } else if (voteTypeBox.getSelectedIndex() == 3) {
                weka.voteType = weka.voteType.minProb;
            } else if (voteTypeBox.getSelectedIndex() == 4) {
                weka.voteType = weka.voteType.averageProb;
            }
            
            weka.Test123();
        } catch (Exception e) {
            System.out.println(e);
            System.out.println(e.getStackTrace());
            e.printStackTrace();
            JFrame frame = new JFrame();
            JOptionPane.showMessageDialog(frame, "Something went wrong, please check if the paths given are valid");
        }
    }
    private void hospitalizationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospitalizationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hospitalizationActionPerformed

    private void TestSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TestSettingsActionPerformed
        baseLinePath = jTextField1.getText();
        followUpPath = jTextField2.getText();
        bioMarkersPath = jTextField3.getText();
        targetLocation = jTextField4.getText();
        baseLinePath = baseLinePath.replace("/", "//");
        followUpPath = followUpPath.replace("/", "//");
        bioMarkersPath = bioMarkersPath.replace("/", "//");
        targetLocation = targetLocation.replace("/", "//");
        unwanted = new ArrayList<String>();
        hospitalLocation = hospitalizationField.getText();
        hospitalLocation = hospitalLocation.replace("/", "//");
        ListModel list = unwantedList.getModel();
        for (int i = 0; i < list.getSize(); i++) {
            unwanted.add((String) list.getElementAt(i));
        }
        try {
            Test test = new Test(baseLinePath, followUpPath, bioMarkersPath, targetLocation, unwanted, hospitalLocation);
            test.runTests();
            //test.runTests2();
        } catch (Exception e) {
            System.out.println(e);
            System.out.println(e.getStackTrace());
            e.printStackTrace();
            JFrame frame = new JFrame();
            JOptionPane.showMessageDialog(frame, "Something went wrong, please check if the paths given are valid");
        }
    }//GEN-LAST:event_TestSettingsActionPerformed

    private void baseFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_baseFilterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_baseFilterActionPerformed
    private void setCompareInText(Comparison com) {
        if (!com.correct) {
            compareInArea.append("-----------------------------------------------------");
            compareInArea.append("\n");
            compareInArea.append("These two classifiers cannot be compared");
            compareInArea.append("\n");
            compareInArea.append("-----------------------------------------------------");
        } else {
            compareInArea.append("-----------------------------------------------------");
            compareInArea.append("\n");
            compareInArea.append("A comparison of the difference between classifications of the same individual");
            compareInArea.append("\n");
            compareInArea.append("Mean diff: " + com.mean);
            compareInArea.append("\n");
            compareInArea.append("Standard deviation diff: " + com.sdev);
            compareInArea.append("\n");
            compareInArea.append("Sample size: " + com.size);
            compareInArea.append("\n");
            compareInArea.append("Tvalue: " + com.tvalue);
            compareInArea.append("\n");
            compareInArea.append("Alpha table for t-values with large degrees of freedom: \n");
            compareInArea.append("Alpha:  25%   | 20%   | 15%   | 10%   | 5%    | 2.5%  | 1%    | 0.5%  | 0.25  | 0.1%  | 0.05% \n");
            compareInArea.append("Tvalue: 0.674 | 0.842 | 1.036 | 1.282 | 1.645 | 1.960 | 2.326 | 2.576 | 2.807 | 3.090 | 3.291  \n");
            compareInArea.append("-----------------------------------------------------");
        }
    }

    private void setCompareText(Result res, int start, int end, double[][] cM, double roc, boolean individual) {
        if (individual) {
            compareArea.append("-----------------------------------------------------");
            compareArea.append("\n");
            compareArea.append("\n");
            compareArea.append("Testing type: " + testType + "\n");
            compareArea.append("Voting type: " + weka.voteType + "\n");
            compareArea.append("Classifier type: " + classifier + "\n");
            compareArea.append("\n");
            compareArea.append("\n");
            compareArea.append("Tested using the " + testType + " classifier \n");
            compareArea.append("using just the individual classifier starting at: " + start + " ending: " + end + "\n");
            compareArea.append("The confusion matrix looks as follows: \n");
            compareArea.append("True        False\n");
            compareArea.append(cM[0][0] + "        " + cM[0][1] + "         <-- classified as True\n");
            compareArea.append(cM[1][0] + "        " + cM[1][1] + "         <-- classified as False\n");
            compareArea.append("\n");
            compareArea.append("\n");
            compareArea.append("AUC: " + roc + "\n");
            compareArea.append("\n");
            compareArea.append("\n");
        } else {
            compareArea.append("-----------------------------------------------------");
            compareArea.append("\n");
            compareArea.append("\n");
            compareArea.append("Testing type: " + testType + "\n");
            compareArea.append("Voting type: " + weka.voteType + "\n");
            compareArea.append("Classifier type: " + classifier + "\n");
            compareArea.append("\n");
            compareArea.append("\n");
            compareArea.append("Tested using the " + testType + " classifier \n");
            compareArea.append("using the ensemble of classifiers starting at: " + start + " ending: " + end + "\n");
            compareArea.append("The confusion matrix looks as follows: \n");
            compareArea.append("True        False\n");
            compareArea.append(res.cMatrix[0][0] + "        " + res.cMatrix[0][1] + "         <-- classified as True\n");
            compareArea.append(res.cMatrix[1][0] + "        " + res.cMatrix[1][1] + "         <-- classified as False\n");
            compareArea.append("\n");
            compareArea.append("\n");
            compareArea.append("AUC: " + res.calcAUC() + "\n");
            compareArea.append("TPR: " + res.TPR() + "\n");
            compareArea.append("FPR: " + res.FPR() + "\n");
            compareArea.append("TNR: " + res.TNR() + "\n");
            compareArea.append("FNR: " + res.FNR() + "\n");
            compareArea.append("ACC: " + res.ACC() + "\n");
            compareArea.append("\n");
            compareArea.append("\n");
        }
    }

    private void setText(Result acc, boolean testSet) {
        jTextArea1.append("-----------------------------------------------------");
        jTextArea1.append("\n");
        jTextArea1.append("\n");
        if (testSet) {
            jTextArea1.append("Testing run: " + run + "\n");
        } else {
            jTextArea1.append("Building classifier run: " + run + "\n");
        }
        jTextArea1.append("Testing type: " + testType + "\n");
        jTextArea1.append("Voting type: " + weka.voteType + "\n");
        jTextArea1.append("Classifier type: " + classifier + "\n");
        jTextArea1.append("\n");
        jTextArea1.append("\n");
        jTextArea1.append("Tested using the " + testType + " classifier \n");
        jTextArea1.append(acc.measurement + " measurements were used out of a possible 5 follow ups\n");
        jTextArea1.append("In the case of the veto vote type, at least " + acc.veto + " classifiers had to claim death to veto\n");
        jTextArea1.append("The confusion matrix looks as follows: \n");
        jTextArea1.append("True        False\n");
        jTextArea1.append(acc.cMatrix[0][0] + "        " + acc.cMatrix[0][1] + "         <-- classified as True\n");
        jTextArea1.append(acc.cMatrix[1][0] + "        " + acc.cMatrix[1][1] + "         <-- classified as False\n");
        jTextArea1.append("\n");
        jTextArea1.append("\n");
        jTextArea1.append("AUC: " + acc.calcAUC() + "\n");
        jTextArea1.append("TPR: " + acc.TPR() + "\n");
        jTextArea1.append("FPR: " + acc.FPR() + "\n");
        jTextArea1.append("TNR: " + acc.TNR() + "\n");
        jTextArea1.append("FNR: " + acc.FNR() + "\n");
        jTextArea1.append("ACC: " + acc.ACC() + "\n");
        jTextArea1.append("\n");
        jTextArea1.append("\n");
        jTextArea1.append("-----------------------------------------------------");
    }

    private void setTextIndividual(Result in) {
        jTextArea1.append("-----------------------------------------------------");
        jTextArea1.append("\n");
        jTextArea1.append("\n");
        jTextArea1.append("classifying individual run: " + run + "\n");
        jTextArea1.append("Testing type: " + testType + "\n");
        jTextArea1.append("Classifier type: " + classifier + "\n");
        jTextArea1.append("\n");
        jTextArea1.append("\n");
        jTextArea1.append("Tested using the " + testType + " classifier the following settings resulted in the best Accuracy\n");
        jTextArea1.append(in.measurement + " measurements were used out of a possible 5 follow ups\n");
        jTextArea1.append("if at least " + in.veto + " classifiers claimed death they had the right to veto the majority\n");
        jTextArea1.append("The following votes were cast: \n");
        jTextArea1.append("True: " + in.cMatrix[0][0] + "    False: " + in.cMatrix[1][1] + " \n");
        if (in.cMatrix[0][0] >= in.veto || in.cMatrix[0][0] > in.cMatrix[1][1]) {
            jTextArea1.append("The individual was classified as true");
        } else if (in.cMatrix[0][0] == in.cMatrix[1][1]) {
            jTextArea1.append("The classifier is unsure as what to classify the individual");
        } else {
            jTextArea1.append("The individual was classified as false");
        }
        jTextArea1.append("\n");
        jTextArea1.append("\n");
        jTextArea1.append("\n");
        jTextArea1.append("-----------------------------------------------------");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws FileNotFoundException, FileNotFoundException, IOException, Exception {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //   GUI g = new GUI();
        //   g.stuff();
        /* Create and display the form */
       
                
        java.awt.EventQueue.invokeLater(new Runnable() {
            
            public void run() {
                new GUI().setVisible(true);
               
            }
        });

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton TestSettings;
    private javax.swing.JButton WrappedButton;
    private javax.swing.JButton addUnwanted;
    private javax.swing.JTextArea base12TextArea;
    private javax.swing.JTextArea base18TextArea;
    private javax.swing.JTextArea base1TextArea;
    private javax.swing.JTextArea base3TextArea;
    private javax.swing.JTextArea base6TextArea;
    private javax.swing.JComboBox baseFilter;
    private javax.swing.JComboBox classifierType;
    private javax.swing.JTextArea compareArea;
    private javax.swing.JButton compareButton;
    private javax.swing.JTextArea compareInArea;
    private javax.swing.JComboBox compareInButton1;
    private javax.swing.JComboBox compareInButton2;
    private javax.swing.JButton compareInStart;
    private javax.swing.JComboBox endBox;
    private javax.swing.JComboBox filterAttributeButton;
    private javax.swing.JToggleButton hospitalization;
    private javax.swing.JTextField hospitalizationField;
    private javax.swing.JButton jButton1;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane18;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JComboBox localCombo;
    private javax.swing.JComboBox maxFuBox;
    private javax.swing.JTextField minInstances;
    private javax.swing.JTextField nnField;
    private javax.swing.JTextField numAtt;
    private javax.swing.JTextField numAttFilter;
    private javax.swing.JTextField numForestAttField;
    private javax.swing.JTextField numTrees;
    private javax.swing.JTextArea one12TextArea;
    private javax.swing.JTextArea one18TextArea;
    private javax.swing.JTextArea one3TextArea;
    private javax.swing.JTextArea one6TextArea;
    private javax.swing.JComboBox pruned;
    private javax.swing.JButton removeUnwanted;
    private javax.swing.JTextField ridgeFactorField;
    private javax.swing.JTextArea six12TextArea;
    private javax.swing.JTextArea six18TextArea;
    private javax.swing.JComboBox startBox;
    private javax.swing.JTextArea three12TextArea;
    private javax.swing.JTextArea three18TextArea;
    private javax.swing.JTextArea three6TextArea;
    private javax.swing.JTextArea twelve18TextArea;
    private javax.swing.JTextField unwantedAtt;
    private javax.swing.JList unwantedList;
    private javax.swing.JComboBox voteTypeBox;
    // End of variables declaration//GEN-END:variables
}
